import { X } from 'lucide-react'
import React, { useEffect, useRef } from 'react'
import { createPortal } from 'react-dom'

import { ModalProps } from './types'
import { useModal } from './useModal'
import Markdown from '../Markdown'

export const Modal: React.FC<ModalProps> = ({
  title,
  summary,
  hint,
  isOpen,
  onClose,
  children,
}) => {
  const modalRef = useRef<HTMLDivElement>(null)
  const { handleKeyDown, handleOverlayClick } = useModal({ onClose, isOpen })

  useEffect(() => {
    const modalElement = modalRef.current
    if (isOpen && modalElement) {
      modalElement.focus()
      document.body.style.overflow = 'hidden'
    }
    return () => {
      document.body.style.overflow = 'unset'
    }
  }, [isOpen])

  if (!isOpen) return null

  return createPortal(
    <div
      className="fixed inset-0 z-50 flex max-h-[80vh] items-start justify-center p-4 backdrop-blur-sm sm:p-10"
      onKeyDown={handleKeyDown}
      onClick={handleOverlayClick}
      role="presentation"
    >
      {/* Overlay */}
      <div className="fixed inset-0 bg-transparent transition-opacity" />

      {/* Modal */}
      <div
        ref={modalRef}
        className="relative z-50 w-full max-w-2xl transform rounded-lg bg-white p-6 shadow-xl transition-all duration-300 ease-in-out dark:border dark:border-gray-800 dark:bg-gray-900"
        role="dialog"
        aria-modal="true"
        aria-labelledby="modal-title"
        tabIndex={-1}
      >
        {/* Close button */}
        <button
          onClick={onClose}
          className="absolute right-4 top-4 text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 dark:text-gray-500 dark:hover:text-gray-400 dark:focus:ring-gray-600"
          aria-label="Close modal"
        >
          <X size={20} />
        </button>

        {/* Content */}
        <div className="space-y-4">
          <h2 id="modal-title" className="text-2xl font-bold text-gray-900 dark:text-white">
            {title}
          </h2>
          <small>
            The issue summary and the recommended steps to address it have been generated by AI
          </small>
          <hr className="border-gray-200 dark:border-gray-700" />
          <h2 className="text-lg font-semibold">Issue Summary</h2>
          <p className="text-sm text-gray-600 dark:text-gray-300">
            <Markdown>{summary}</Markdown>
          </p>
          {hint && (
            <>
              <h2 className="text-lg font-semibold">How to tackle it</h2>
              <p className="max-h-[160px] overflow-y-auto text-sm text-gray-500 dark:text-gray-400">
                <Markdown>{hint}</Markdown>
              </p>
            </>
          )}
          {children}
        </div>

        {/* Actions */}
        <div className="mt-6 flex justify-end">
          <button
            onClick={onClose}
            className="rounded-md bg-gray-600 px-4 py-2 text-sm font-medium text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 dark:bg-gray-700 dark:hover:bg-gray-600 dark:focus:ring-gray-600"
          >
            Close
          </button>
        </div>
      </div>
    </div>,
    document.body
  )
}
