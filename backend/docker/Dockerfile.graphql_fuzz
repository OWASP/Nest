FROM python:3.12-alpine

ENV APK_CACHE_DIR="/home/owasp/.cache/apk" \
    APK_SYMLINK_DIR="/etc/apk/cache" \
    OWASP_GID=1000 \
    OWASP_UID=1000 \
    PIP_CACHE_DIR="/home/owasp/.cache/pip" \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    PYTHONUNBUFFERED=1

RUN mkdir -p ${APK_CACHE_DIR} ${POETRY_CACHE_DIR} && \
    ln -fns ${APK_CACHE_DIR} ${APK_SYMLINK_DIR}

RUN --mount=type=cache,target=${APK_CACHE_DIR} \
    apk update && apk upgrade && \
    addgroup -S -g ${OWASP_GID} owasp && \
    adduser -S -h /home/owasp -u ${OWASP_UID} -G owasp owasp && \
    chown -R owasp:owasp /home/owasp

RUN --mount=type=cache,target=${APK_CACHE_DIR},uid=${OWASP_UID},gid=${OWASP_GID} \
    apk add curl jq gcc musl-dev libffi-dev linux-headers

RUN --mount=type=cache,target=${PIP_CACHE_DIR} \
    pip install graphqler --cache-dir ${PIP_CACHE_DIR}

WORKDIR /home/owasp

COPY docker/entrypoint_graphql_fuzz.sh entrypoint.sh

RUN touch /home/owasp/config.toml && \
    chmod +x /home/owasp/config.toml && \
    chown owasp:owasp /home/owasp/config.toml

# Create the graphql output dir and give permissions to the owasp user
RUN mkdir -p /home/owasp/fuzzing_results && \
    chmod +x /home/owasp/fuzzing_results /home/owasp/entrypoint.sh && \
    chown owasp:owasp /home/owasp/fuzzing_results /home/owasp/entrypoint.sh

USER owasp

CMD ["/home/owasp/entrypoint.sh"]
