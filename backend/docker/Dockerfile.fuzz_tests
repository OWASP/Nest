FROM python:3.13-slim AS builder

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Install necessary dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc libpq-dev && \
    rm -rf /var/lib/apt/lists/* && \
    groupadd --system owasp && \
    useradd --system --create-home --home-dir /home/owasp -g owasp owasp && \
    python -m pip install --no-cache-dir poetry

ENV FORCE_COLOR=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    PYTHONUNBUFFERED=1

WORKDIR /home/owasp
USER owasp

# Copy Poetry configuration and install dependencies
COPY --chmod=444 poetry.lock pyproject.toml ./
RUN poetry install --no-root

# Copy application files
COPY .env.example .env.example
COPY apps apps
COPY manage.py wsgi.py ./
COPY settings settings
COPY static static
COPY templates templates
COPY fuzz_tests fuzz_tests

FROM python:3.13-slim

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends libpq-dev && \
    rm -rf /var/lib/apt/lists/* && \
    groupadd --system owasp && \
    useradd --system --create-home --home-dir /home/owasp -g owasp owasp

ENV FORCE_COLOR=1 \
    PATH="/home/owasp/.venv/bin:$PATH" \
    PYTHONUNBUFFERED=1

WORKDIR /home/owasp
USER owasp

# Copy built application from the builder stage
COPY --from=builder --chmod=555 --chown=owasp:owasp /home/owasp /home/owasp

# Run fuzz tests
CMD ["bash", "-c", "poetry run pytest fuzz_tests"]
