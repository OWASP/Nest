[tool.poetry]
name = "OWASP Nest"
version = "0.1.0"
description = "Your gateway to OWASP"
authors = ["Arkadii Yakovets"]
readme = "README.md"
packages = [{ include = "apps" }]

[tool.coverage.run]
branch = true
omit = [
    "__init__.py",
    "**/admin.py",
    "**/apps.py",
    "**/migrations/*",
    "manage.py",
    "settings/*",
    "tests/*",
    "wsgi.py",
]

[tool.poetry.dependencies]
algoliasearch = "^4.13.2"
algoliasearch-django = "^4.0.0"
django = "^5.1"
django-configurations = "^2.5.1"
django-cors-headers = "^4.7.0"
django-filter = "^25.1"
django-storages = { extras = ["s3"], version = "^1.14.4" }
djangorestframework = "^3.15.2"
geopy = "^2.4.1"
graphene-django = "^3.2.2"
gunicorn = "^23.0.0"
humanize = "^4.11.0"
lxml = "^5.3.0"
markdown = "^3.7"
openai = "^1.60.1"
psycopg = "^3.2.4"
pygithub = "^2.5.0"
python = "^3.13"
python-dateutil = "^2.9.0.post0"
pyyaml = "^6.0.2"
requests = "^2.32.3"
sentry-sdk = { extras = ["django"], version = "^2.20.0" }
slack-bolt = "^1.22.0"

[tool.poetry.group.dev.dependencies]
djlint = "^1.36.4"
pre-commit = "^4.1.0"
ruff = "^0.11.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-cov = "^6.0"
pytest-django = "^4.5"
pytest-mock = "^3.0"
pytest-xdist = "^3.0"
python-dotenv = "^1.0.1"

[tool.djlint]
format = true
format_css = true
format_js = true
indent = 4

[tool.pytest.ini_options]
DJANGO_CONFIGURATION = "Test"
DJANGO_SETTINGS_MODULE = "settings.test"
addopts = [
    "--cov-config=pyproject.toml",
    "--cov-fail-under=75",
    "--cov-report=term-missing",
    "--cov=.",
    "--dist=loadscope",
    "--durations-min=1",
    "--durations=5",
    "--no-cov-on-fail",
    "--numprocesses=auto",
]
filterwarnings = [
    "ignore::DeprecationWarning:pytest_cov",
    "ignore::DeprecationWarning:xdist",
    "ignore::django.conf.RemovedInDjango60Warning:django",
]
log_level = "INFO"

[tool.ruff]
line-length = 99

[tool.ruff.lint]
extend-select = ["I"]
ignore = [
    "ANN",    # Annotations
    "ARG002", # Unused method argument
    "C901",   # Function too complex
    "COM812", # Missing trailing comma
    "DJ012",  # Django-related
    "ERA001", # Commented-out code
    "FBT002", # Boolean parameter in function definition
    "FIX002", # Line contains TODO
    "PD",     # Pandas-related
    "PERF203",# Performance warning
    "PLC0414",# Import shadowing
    "PLR0912",# Too many branches
    "PLR0913",# Too many arguments
    "PLR0915",# Too many statements
    "RUF012", # Mutable class attributes
    "SLF001", # Private member access
    "TD003",  # TODO requires description

    # Docstring style conflicts
    "D203",   # One blank line before class
    "D211",   # No blank line before class
    "D212",   # Multi-line summary first line
    "D213",   # Multi-line summary second line
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["D104", "F401"]
"**/admin.py" = ["D100", "D101", "D104"]
"**/api/*.py" = ["D106"]
"**/apps.py" = ["D100", "D101", "D104"]
"**/graphql/**/nodes.py" = ["D106"]
"**/graphql/nodes/*.py" = ["D106"]
"**/graphql/queries/*.py" = ["N805"]
"**/management/commands/*.py" = ["D101", "D102", "T201"]
"**/migrations/*.py" = ["D100", "D101", "D104"]
"**/models.py" = ["D106"]
"**/models/*.py" = ["D106"]
"**/tests/**/*.py" = ["D100", "D101", "D102", "D103", "D107", "S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
