[tool.poetry]
name = "OWASP Nest"
version = "0.1.0"
description = "Streamlines OWASP entities management"
authors = ["Arkadii Yakovets <arkadii.yakovets@owasp.org>"]
readme = "README.md"

packages = [{ include = "apps" }]

[tool.coverage.run]
branch = true
omit = [
    "__init__.py",
    "**/admin.py",
    "**/apps.py",
    "**/migrations/*",
    "manage.py",
    "settings/*",
    "tests/*",
    "wsgi.py",
]

[tool.poetry.dependencies]
algoliasearch-django = "^3.0.0"
django = "^5.1"
django-configurations = "^2.5.1"
django-filter = "^24.3"
django-storages = { extras = ["s3"], version = "^1.14.4" }
djangorestframework = "^3.15.2"
geopy = "^2.4.1"
gunicorn = "^23.0.0"
humanize = "^4.11.0"
lxml = "^5.3.0"
markdown = "^3.7"
openai = "^1.58.1"
psycopg = "^3.2.3"
pygithub = "^2.5.0"
python = "^3.12"
pyyaml = "^6.0.2"
requests = "^2.32.3"
sentry-sdk = {extras = ["django"], version = "^2.19.2"}
slack-bolt = "^1.21.3"
django-cors-headers = "^4.6.0"


[tool.poetry.group.dev.dependencies]
djlint = "^1.36.3"
isort = "^5.13.2"
pre-commit = "^4.0.0"
ruff = "^0.8.3"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.4"
pytest-django = "^4.5"
pytest-cov = "^6.0"
pytest-xdist = "^3.0"
pytest-mock = "^3.0"
python-dotenv = "^1.0.1"

[tool.djlint]
format = true
format_js = true
format_css = true
indent = 4

[tool.isort]
known_third_party = ["django", "rest_framework"]
known_first_party = ["apps"]
multi_line_output = 3
profile = "black"

[tool.pytest.ini_options]
DJANGO_CONFIGURATION = "Test"
DJANGO_SETTINGS_MODULE = "settings.test"
addopts = [
    "--cov-config=pyproject.toml",
    "--cov-fail-under=30",
    "--cov-report=term-missing",
    "--cov=.",
    "--dist=loadscope",
    "--no-cov-on-fail",
    "--numprocesses=auto",
]
filterwarnings = [
    "ignore::DeprecationWarning:pytest_cov",
    "ignore::DeprecationWarning:xdist",
    "ignore::django.conf.RemovedInDjango60Warning:django",
]
log_level = "INFO"
python_files = ["*_tests.py"]


[tool.ruff]
line-length = 99

[tool.ruff.lint]
ignore = [
    "ANN",
    "ARG002",
    "C901",
    "COM812",
    "DJ012",
    "ERA001",
    "FBT002",
    "FIX002",
    "PD",
    "PERF203",
    "PLC0414",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "RUF012",
    "TD003",
]
select = ["ALL"]

[tool.ruff.per-file-ignores]
"**/__init__.py" = ["D104", "F401"]
"**/admin.py" = ["D100", "D101", "D104"]
"**/apps.py" = ["D100", "D101", "D104"]
"**/management/commands/*.py" = ["D101", "D102", "T201"]
"**/migrations/*.py" = ["D100", "D101", "D104"]
"**/models.py" = ["D106"]
"**/api/*.py" = ["D106"]
"**/models/*.py" = ["D106"]
"**/tests/**/*.py" = ["D100", "D101", "D102", "D103", "S101"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
