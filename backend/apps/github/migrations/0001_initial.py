# Generated by Django 5.1.1 on 2024-09-11 16:51

import datetime

import django.db.models.deletion
from django.db import migrations, models

import apps.github.models.common


class Migration(migrations.Migration):
    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Repository",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                ("key", models.CharField(max_length=100, verbose_name="Key")),
                (
                    "description",
                    models.CharField(default="", max_length=500, verbose_name="Description"),
                ),
                (
                    "default_branch",
                    models.CharField(default="", max_length=100, verbose_name="Default branch"),
                ),
                (
                    "homepage",
                    models.CharField(default="", max_length=100, verbose_name="Homepage"),
                ),
                ("language", models.CharField(default="", max_length=50, verbose_name="Language")),
                ("license", models.CharField(default="", max_length=100, verbose_name="License")),
                ("size", models.PositiveIntegerField(default=0, verbose_name="Size in KB")),
                ("topics", models.JSONField(default=list, verbose_name="Topics")),
                ("is_archived", models.BooleanField(default=False, verbose_name="Is archived")),
                ("is_fork", models.BooleanField(default=False, verbose_name="Is fork")),
                ("is_template", models.BooleanField(default=False, verbose_name="Is template")),
                (
                    "has_downloads",
                    models.BooleanField(default=False, verbose_name="Has downloads"),
                ),
                ("has_issues", models.BooleanField(default=False, verbose_name="Has issues")),
                ("has_pages", models.BooleanField(default=False, verbose_name="Has pages")),
                ("has_projects", models.BooleanField(default=False, verbose_name="Has projects")),
                ("has_wiki", models.BooleanField(default=False, verbose_name="Has wiki")),
                (
                    "forks_count",
                    models.PositiveIntegerField(default=0, verbose_name="Forks count"),
                ),
                (
                    "open_issues_count",
                    models.PositiveIntegerField(default=0, verbose_name="Open issues count"),
                ),
                (
                    "stars_count",
                    models.PositiveIntegerField(default=0, verbose_name="Stars count"),
                ),
                (
                    "subscribers_count",
                    models.PositiveIntegerField(default=0, verbose_name="Subscribers count"),
                ),
                ("pushed_at", models.DateTimeField(verbose_name="Pushed at")),
                ("original_created_at", models.DateTimeField(verbose_name="Original created_at")),
                ("original_updated_at", models.DateTimeField(verbose_name="Original updated_at")),
                (
                    "owner_login",
                    models.CharField(default="", max_length=100, verbose_name="Owner login"),
                ),
                (
                    "owner_type",
                    models.CharField(
                        choices=[("organization", "Organization"), ("user", "User")],
                        default="user",
                        max_length=20,
                        verbose_name="Owner type",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Repositories",
                "db_table": "repositories",
                "constraints": [
                    models.UniqueConstraint(fields=("key", "owner_login"), name="unique_key_owner")
                ],
            },
        ),
        migrations.AlterModelTable(
            name="repository",
            table="github_repositories",
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "description",
                    models.CharField(default="", max_length=1000, verbose_name="Description"),
                ),
                ("avatar_url", models.URLField(default="", verbose_name="Avatar URL")),
                (
                    "collaborators_count",
                    models.PositiveIntegerField(default=0, verbose_name="Collaborators count"),
                ),
                ("company", models.CharField(default="", max_length=200, verbose_name="Company")),
                ("email", models.EmailField(default="", max_length=100, verbose_name="Email")),
                (
                    "followers_count",
                    models.PositiveIntegerField(default=0, verbose_name="Followers count"),
                ),
                (
                    "following_count",
                    models.PositiveIntegerField(default=0, verbose_name="Following count"),
                ),
                (
                    "location",
                    models.CharField(default="", max_length=200, verbose_name="Location"),
                ),
                (
                    "login",
                    models.CharField(default="", max_length=100, unique=True, verbose_name="Key"),
                ),
                ("name", models.CharField(default="", max_length=200, verbose_name="Name")),
                (
                    "original_created_at",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2024, 8, 20, 19, 14, 44, 920859, tzinfo=datetime.UTC
                        ),
                        verbose_name="Original created_at",
                    ),
                ),
                (
                    "original_updated_at",
                    models.DateTimeField(
                        default=datetime.datetime(
                            2024, 8, 20, 19, 14, 50, 238981, tzinfo=datetime.UTC
                        ),
                        verbose_name="Original updated_at",
                    ),
                ),
                (
                    "public_gists_count",
                    models.PositiveIntegerField(default=0, verbose_name="Public gists count"),
                ),
                (
                    "public_repositories_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Public repositories count"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Organizations",
                "db_table": "github_organizations",
            },
            bases=(apps.github.models.common.GenericUserModel, models.Model),
        ),
        migrations.AddField(
            model_name="repository",
            name="organization",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="github.organization",
                verbose_name="Organization",
            ),
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                ("login", models.CharField(max_length=100, unique=True, verbose_name="Key")),
                ("email", models.EmailField(default="", max_length=100, verbose_name="Email")),
                ("avatar_url", models.URLField(default="", verbose_name="Avatar URL")),
                ("company", models.CharField(default="", max_length=200, verbose_name="Company")),
                (
                    "location",
                    models.CharField(default="", max_length=200, verbose_name="Location"),
                ),
                (
                    "collaborators_count",
                    models.PositiveIntegerField(default=0, verbose_name="Collaborators count"),
                ),
                (
                    "following_count",
                    models.PositiveIntegerField(default=0, verbose_name="Following count"),
                ),
                (
                    "followers_count",
                    models.PositiveIntegerField(default=0, verbose_name="Followers count"),
                ),
                (
                    "public_gists_count",
                    models.PositiveIntegerField(default=0, verbose_name="Public gists count"),
                ),
                (
                    "public_repositories_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Public repositories count"
                    ),
                ),
                ("original_created_at", models.DateTimeField(verbose_name="Original created_at")),
                ("original_updated_at", models.DateTimeField(verbose_name="Original updated_at")),
                ("bio", models.TextField(default="", max_length=1000, verbose_name="Bio")),
                ("is_hireable", models.BooleanField(default=False, verbose_name="Is hireable")),
                (
                    "twitter_username",
                    models.CharField(default="", max_length=50, verbose_name="Twitter username"),
                ),
            ],
            options={
                "verbose_name_plural": "Users",
                "db_table": "github_users",
            },
        ),
        migrations.AddField(
            model_name="repository",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="github.user",
                verbose_name="Owner",
            ),
        ),
        migrations.AddField(
            model_name="repository",
            name="watchers_count",
            field=models.PositiveIntegerField(default=0, verbose_name="Watchers count"),
        ),
        migrations.RemoveConstraint(
            model_name="repository",
            name="unique_key_owner",
        ),
        migrations.RemoveField(
            model_name="repository",
            name="owner_login",
        ),
        migrations.RemoveField(
            model_name="repository",
            name="owner_type",
        ),
        migrations.AddConstraint(
            model_name="repository",
            constraint=models.UniqueConstraint(fields=("key", "owner"), name="unique_key_owner"),
        ),
        migrations.AddField(
            model_name="repository",
            name="languages",
            field=models.JSONField(default=dict, verbose_name="Languages"),
        ),
        migrations.RemoveField(
            model_name="repository",
            name="language",
        ),
        migrations.AddField(
            model_name="organization",
            name="node_id",
            field=models.CharField(default="", unique=True, verbose_name="Node ID"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="repository",
            name="node_id",
            field=models.CharField(default="", unique=True, verbose_name="Node ID"),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="user",
            name="node_id",
            field=models.CharField(default="", unique=True, verbose_name="Node ID"),
            preserve_default=False,
        ),
        migrations.RenameField(
            model_name="organization",
            old_name="created_at",
            new_name="nest_created_at",
        ),
        migrations.RenameField(
            model_name="organization",
            old_name="updated_at",
            new_name="nest_updated_at",
        ),
        migrations.RenameField(
            model_name="repository",
            old_name="created_at",
            new_name="nest_created_at",
        ),
        migrations.RenameField(
            model_name="repository",
            old_name="updated_at",
            new_name="nest_updated_at",
        ),
        migrations.RenameField(
            model_name="user",
            old_name="created_at",
            new_name="nest_created_at",
        ),
        migrations.RenameField(
            model_name="user",
            old_name="updated_at",
            new_name="nest_updated_at",
        ),
        migrations.RemoveField(
            model_name="organization",
            name="original_created_at",
        ),
        migrations.RemoveField(
            model_name="organization",
            name="original_updated_at",
        ),
        migrations.RemoveField(
            model_name="repository",
            name="original_created_at",
        ),
        migrations.RemoveField(
            model_name="repository",
            name="original_updated_at",
        ),
        migrations.RemoveField(
            model_name="user",
            name="original_created_at",
        ),
        migrations.RemoveField(
            model_name="user",
            name="original_updated_at",
        ),
        migrations.AddField(
            model_name="organization",
            name="created_at",
            field=models.DateTimeField(
                default=datetime.datetime(2024, 8, 21, 21, 8, 41, 7158, tzinfo=datetime.UTC),
                verbose_name="Created at",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="organization",
            name="updated_at",
            field=models.DateTimeField(
                default=datetime.datetime(2024, 8, 21, 21, 8, 47, 175920, tzinfo=datetime.UTC),
                verbose_name="Updated at",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="repository",
            name="created_at",
            field=models.DateTimeField(verbose_name="Created at"),
        ),
        migrations.AddField(
            model_name="repository",
            name="updated_at",
            field=models.DateTimeField(verbose_name="Updated at"),
        ),
        migrations.AddField(
            model_name="user",
            name="created_at",
            field=models.DateTimeField(
                default=datetime.datetime(2024, 8, 21, 21, 8, 55, 980536, tzinfo=datetime.UTC),
                verbose_name="Created at",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="user",
            name="updated_at",
            field=models.DateTimeField(
                default=datetime.datetime(2024, 8, 21, 21, 8, 57, 168111, tzinfo=datetime.UTC),
                verbose_name="Updated at",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="repository",
            name="has_funding_yml",
            field=models.BooleanField(default=False, verbose_name="Has FUNDING.yml"),
        ),
        migrations.AddField(
            model_name="repository",
            name="funding_yml",
            field=models.JSONField(default=dict, verbose_name="FUNDING.yml data"),
        ),
        migrations.AddField(
            model_name="repository",
            name="is_funding_policy_compliant",
            field=models.BooleanField(default=True, verbose_name="Is funding policy compliant"),
        ),
        migrations.AddField(
            model_name="repository",
            name="is_owasp_site_repository",
            field=models.BooleanField(default=False, verbose_name="Is OWASP site repository"),
        ),
        migrations.AlterField(
            model_name="organization",
            name="login",
            field=models.CharField(max_length=100, unique=True, verbose_name="Login"),
        ),
        migrations.AlterField(
            model_name="user",
            name="login",
            field=models.CharField(max_length=100, unique=True, verbose_name="Login"),
        ),
        migrations.AddField(
            model_name="repository",
            name="is_empty",
            field=models.BooleanField(default=False, verbose_name="Is empty"),
        ),
        migrations.AlterField(
            model_name="repository",
            name="description",
            field=models.CharField(default="", max_length=1000, verbose_name="Description"),
        ),
        migrations.AddField(
            model_name="repository",
            name="commits_count",
            field=models.PositiveIntegerField(default=0, verbose_name="Commits"),
        ),
        migrations.AddField(
            model_name="repository",
            name="pages_status",
            field=models.CharField(default="", max_length=20, verbose_name="Pages status"),
        ),
        migrations.AddField(
            model_name="repository",
            name="contributors_count",
            field=models.PositiveIntegerField(default=0, verbose_name="Contributors"),
        ),
        migrations.AddField(
            model_name="repository",
            name="is_owasp_repository",
            field=models.BooleanField(default=False, verbose_name="Is OWASP repository"),
        ),
        migrations.AlterField(
            model_name="repository",
            name="forks_count",
            field=models.PositiveIntegerField(default=0, verbose_name="Forks"),
        ),
        migrations.AlterField(
            model_name="repository",
            name="open_issues_count",
            field=models.PositiveIntegerField(default=0, verbose_name="Open issues"),
        ),
        migrations.AlterField(
            model_name="repository",
            name="stars_count",
            field=models.PositiveIntegerField(default=0, verbose_name="Stars"),
        ),
        migrations.AlterField(
            model_name="repository",
            name="subscribers_count",
            field=models.PositiveIntegerField(default=0, verbose_name="Subscribers"),
        ),
        migrations.AlterField(
            model_name="repository",
            name="watchers_count",
            field=models.PositiveIntegerField(default=0, verbose_name="Watchers"),
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("nest_created_at", models.DateTimeField(auto_now_add=True)),
                ("nest_updated_at", models.DateTimeField(auto_now=True)),
                ("node_id", models.CharField(unique=True, verbose_name="Node ID")),
                ("name", models.CharField(max_length=100, verbose_name="Name")),
                ("description", models.CharField(max_length=200, verbose_name="Description")),
                ("color", models.CharField(default="", max_length=6, verbose_name="Color")),
                (
                    "sequence_id",
                    models.PositiveBigIntegerField(default=0, verbose_name="Label ID"),
                ),
                ("is_default", models.BooleanField(default=False, verbose_name="Is default")),
            ],
            options={
                "verbose_name_plural": "Labels",
                "db_table": "github_labels",
            },
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("nest_created_at", models.DateTimeField(auto_now_add=True)),
                ("nest_updated_at", models.DateTimeField(auto_now=True)),
                ("node_id", models.CharField(unique=True, verbose_name="Node ID")),
                ("title", models.CharField(max_length=500, verbose_name="Title")),
                ("body", models.TextField(default="", verbose_name="Body")),
                (
                    "state",
                    models.CharField(
                        choices=[("open", "Open"), ("closed", "Closed")],
                        default="open",
                        max_length=20,
                        verbose_name="State",
                    ),
                ),
                ("url", models.URLField(default="", max_length=500, verbose_name="URL")),
                ("number", models.PositiveBigIntegerField(default=0, verbose_name="Number")),
                (
                    "sequence_id",
                    models.PositiveBigIntegerField(default=0, verbose_name="Issue ID"),
                ),
                ("is_locked", models.BooleanField(default=False, verbose_name="Is locked")),
                (
                    "lock_reason",
                    models.CharField(default="", max_length=200, verbose_name="Lock reason"),
                ),
                (
                    "comments_count",
                    models.PositiveIntegerField(default=0, verbose_name="Comments"),
                ),
                ("created_at", models.DateTimeField(verbose_name="Created at")),
                ("updated_at", models.DateTimeField(db_index=True, verbose_name="Updated at")),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_issues",
                        to="github.user",
                        verbose_name="Author",
                    ),
                ),
                (
                    "repository",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="issues",
                        to="github.repository",
                    ),
                ),
                (
                    "labels",
                    models.ManyToManyField(
                        blank=True, related_name="issue", to="github.label", verbose_name="Labels"
                    ),
                ),
                (
                    "assignees",
                    models.ManyToManyField(
                        blank=True,
                        related_name="issue",
                        to="github.user",
                        verbose_name="Assignees",
                    ),
                ),
                (
                    "closed_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Closed at"),
                ),
                (
                    "state_reason",
                    models.CharField(default="", max_length=200, verbose_name="State reason"),
                ),
            ],
            options={
                "verbose_name_plural": "Issues",
                "db_table": "github_issues",
                "ordering": ("-updated_at", "-state"),
            },
        ),
        migrations.AlterField(
            model_name="organization",
            name="name",
            field=models.CharField(max_length=200, verbose_name="Name"),
        ),
        migrations.CreateModel(
            name="Release",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("nest_created_at", models.DateTimeField(auto_now_add=True)),
                ("nest_updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=200, verbose_name="Name")),
                ("tag_name", models.CharField(max_length=100, verbose_name="Tag name")),
                ("description", models.TextField(default="", verbose_name="Description")),
                ("is_draft", models.BooleanField(default=False, verbose_name="Is draft")),
                (
                    "is_pre_release",
                    models.BooleanField(default=False, verbose_name="Is pre-release"),
                ),
                ("published_at", models.DateTimeField(verbose_name="Published at")),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="github.user",
                    ),
                ),
                (
                    "repository",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="releases",
                        to="github.repository",
                    ),
                ),
                ("node_id", models.CharField(unique=True, verbose_name="Node ID")),
                ("created_at", models.DateTimeField(verbose_name="Created at")),
                (
                    "sequence_id",
                    models.PositiveBigIntegerField(default=0, verbose_name="Release ID"),
                ),
            ],
            options={
                "verbose_name_plural": "Releases",
                "db_table": "github_releases",
            },
        ),
    ]
