"""Slack bot view for Slack events."""

from django.conf import settings
from django.core.exceptions import ValidationError
from django.http import HttpResponse
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_GET, require_POST
from slack_bolt.adapter.django import SlackRequestHandler

from apps.slack.apps import SlackConfig
from apps.slack.models.google_auth import GoogleAuth

slack_handler = SlackRequestHandler(SlackConfig.app)


@csrf_exempt  # NOSONAR
@require_POST  # NOSONAR
def slack_request_handler(request):
    """Handle Slack requests.

    Args:
        request (HttpRequest): The HTTP request object from Slack.

    Returns:
        HttpResponse: The response generated by the SlackRequestHandler.

    """
    return slack_handler.handle(request)


@require_GET
def google_auth_callback(request):
    """Handle Google OAuth callback.

    Args:
        request (HttpRequest): The HTTP request object from Google.

    Returns:
        HttpResponse: The response generated by the Google OAuth flow.

    """
    # Handle the Google OAuth callback logic here
    member_id = request.GET.get("state")
    auth_response = request.build_absolute_uri()
    if settings.IS_LOCAL_ENVIRONMENT:
        auth_response = auth_response.replace("http://", "https://")
    try:
        GoogleAuth.authenticate_callback(auth_response, member_id)
    except (ValueError, ValidationError):
        return HttpResponse("Error during Google sign-in.", status=400)
    return HttpResponse(
        "You are successfully signed in with Google.<br>You can now close the page.", status=200
    )
