# Generated by Django 5.2.4 on 2025-08-05 14:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models

import apps.owasp.models.mixins.project


class Migration(migrations.Migration):
    dependencies = [
        ("github", "0033_alter_release_published_at"),
        ("owasp", "0044_chapter_chapter_updated_at_desc_idx_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("nest_created_at", models.DateTimeField(auto_now_add=True)),
                ("nest_updated_at", models.DateTimeField(auto_now=True)),
                ("key", models.CharField(max_length=100, unique=True, verbose_name="Key")),
                ("summary", models.TextField(blank=True, default="", verbose_name="Summary")),
                (
                    "has_active_repositories",
                    models.BooleanField(default=True, verbose_name="Has active repositories"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Is active")),
                ("tags", models.JSONField(default=list, verbose_name="OWASP metadata tags")),
                (
                    "topics",
                    models.JSONField(
                        blank=True,
                        default=list,
                        null=True,
                        verbose_name="GitHub repository topics",
                    ),
                ),
                (
                    "leaders_raw",
                    models.JSONField(
                        blank=True, default=list, null=True, verbose_name="Entity leaders list"
                    ),
                ),
                (
                    "related_urls",
                    models.JSONField(
                        blank=True, default=list, null=True, verbose_name="Entity related URLs"
                    ),
                ),
                (
                    "invalid_urls",
                    models.JSONField(
                        blank=True,
                        default=list,
                        null=True,
                        verbose_name="Entity invalid related URLs",
                    ),
                ),
                (
                    "is_leaders_policy_compliant",
                    models.BooleanField(default=True, verbose_name="Is leaders policy compliant"),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the badge.", max_length=255, unique=True),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True, help_text="A short description of the badge.", max_length=255
                    ),
                ),
                (
                    "weight",
                    models.PositiveSmallIntegerField(
                        default=0,
                        help_text="A weight to sort badges by.",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "css_class",
                    models.CharField(
                        help_text="The font-awesome css class for the badge.", max_length=255
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(blank=True, null=True, verbose_name="Updated at"),
                ),
                (
                    "leaders",
                    models.ManyToManyField(
                        blank=True,
                        related_name="assigned_%(class)s",
                        to="github.user",
                        verbose_name="Leaders",
                    ),
                ),
                (
                    "owasp_repository",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="github.repository",
                    ),
                ),
                (
                    "suggested_leaders",
                    models.ManyToManyField(
                        blank=True,
                        related_name="matched_%(class)s",
                        to="github.user",
                        verbose_name="Suggested leaders",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Badges",
                "db_table": "owasp_badges",
                "indexes": [
                    models.Index(fields=["-created_at"], name="badge_created_at_desc_idx"),
                    models.Index(fields=["-updated_at"], name="badge_updated_at_desc_idx"),
                ],
            },
            bases=(apps.owasp.models.mixins.project.ProjectIndexMixin, models.Model),
        ),
    ]
