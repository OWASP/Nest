services:
  backend:
    container_name: nest-backend-e2e
    command: >
      sh -c '
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      '
    build:
      context: ../backend
      dockerfile: docker/Dockerfile.e2e
    depends_on:
      db:
        condition: service_healthy
    env_file: ../backend/.env
    environment:
      DJANGO_DB_HOST: ${DJANGO_DB_HOST:-db}
      DJANGO_DB_NAME: ${DJANGO_DB_NAME:-nest_db_e2e}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD:-nest_user_e2e_password}
      DJANGO_DB_PORT: ${DJANGO_DB_PORT:-5432}
      DJANGO_DB_USER: ${DJANGO_DB_USER:-nest_user_e2e}
    networks:
      - nest-network
    ports:
      - 8000:8000
  db:
    container_name: nest-db-e2e
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_DB: ${DJANGO_DB_NAME:-nest_db_e2e}
      POSTGRES_PASSWORD: ${DJANGO_DB_PASSWORD:-nest_user_e2e_password}
      POSTGRES_USER: ${DJANGO_DB_USER:-nest_user_e2e}
    healthcheck:
      interval: 5s
      retries: 5
      test: [CMD-SHELL, pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h localhost -p 5432]
      timeout: 5s
    networks:
      - nest-network
    volumes:
      - db-e2e-data:/var/lib/postgresql/data
    ports:
      - 5433:5432


volumes:
  db-e2e-data:

networks:
  nest-network:
