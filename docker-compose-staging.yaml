services:
  staging-nest-backend:
    container_name: staging-nest-backend
    image: arkid15r/owasp-nest-backend:staging
    command: >
      bash -c "
        poetry run python manage.py migrate &&
        poetry run python manage.py collectstatic --noinput &&
        poetry run gunicorn wsgi:application --bind 0.0.0.0:8000
      "
    env_file: .env/backend
    depends_on:
      staging-nest-db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - staging-nest-app-network
      - staging-nest-db-network
    volumes:
      - ./data:/home/owasp/data

  staging-nest-certbot:
    container_name: staging-nest-certbot
    image: certbot/certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - staging-certbot-webroot:/var/www/certbot
    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h & wait $${!}; done;'

  staging-nest-frontend:
    container_name: staging-nest-frontend
    image: arkid15r/owasp-nest-frontend:staging
    restart: unless-stopped
    networks:
      - staging-nest-app-network

  staging-nest-db:
    container_name: staging-nest-db
    image: postgres:16.4
    env_file: .env/db
    healthcheck:
      test:
        [
          'CMD',
          'pg_isready',
          '-U',
          'nest_user_staging',
          '-d',
          'nest_db_staging',
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - ./volumes/db:/var/lib/postgresql/data
    networks:
      - staging-nest-db-network

  staging-nest-nginx:
    container_name: staging-nest-nginx
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - staging-certbot-webroot:/var/www/certbot
    depends_on:
      - staging-nest-backend
      - staging-nest-frontend
    networks:
      - staging-nest-app-network

networks:
  staging-nest-app-network:
  staging-nest-db-network:

volumes:
  staging-certbot-webroot:
