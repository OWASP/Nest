services:
  backend:
    container_name: nest-backend
    command: >
      bash -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    build:
      context: ../backend
      dockerfile: docker/Dockerfile.local
    depends_on:
      db:
        condition: service_healthy
    env_file: ../backend/.env
    environment:
      DJANGO_DB_HOST: ${DJANGO_DB_HOST:-db}
      DJANGO_DB_NAME: ${DJANGO_DB_NAME:-nest_db_dev}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD:-nest_user_dev_password}
      DJANGO_DB_PORT: ${DJANGO_DB_PORT:-5432}
      DJANGO_DB_USER: ${DJANGO_DB_USER:-nest_user_dev}
    ports:
      - 127.0.0.1:8000:8000
    volumes:
      - ../backend:/home/owasp
      - /home/owasp/.venv

  db:
    container_name: nest-db
    image: postgres:16.4
    environment:
      POSTGRES_DB: ${DJANGO_DB_NAME:-nest_db_dev}
      POSTGRES_PASSWORD: ${DJANGO_DB_PASSWORD:-nest_user_dev_password}
      POSTGRES_USER: ${DJANGO_DB_USER:-nest_user_dev}
    healthcheck:
      test: [CMD, pg_isready, -U, '${DJANGO_DB_USER:-nest_user_dev}', -d, '${DJANGO_DB_NAME:-nest_db_dev}']
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data

  frontend:
    container_name: nest-frontend
    command: >
      bash -c "
        pnpm install &&
        pnpm run dev
      "
    build:
      context: ../frontend
      dockerfile: docker/Dockerfile.local
    ports:
      - 127.0.0.1:3000:3000
    volumes:
      - ../frontend:/home/owasp
    environment:
      NODE_ENV: local

  typesense:
    image: typesense/typesense:0.25.0
    container_name: nest-typesense
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY:-nest_typesense_dev}
      - TYPESENSE_DATA_DIR=/data
    ports:
      - 8108:8108
    volumes:
      - typesense-data:/data

volumes:
  db-data:
  typesense-data:
