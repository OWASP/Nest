  - name: Deploy Nest to Staging
    hosts: staging_nest
    tasks:
      - name: Copy docker-compose.yaml
        ansible.builtin.copy:
          src: '{{ github_workspace }}/docker-compose/staging.yaml'
          dest: ~/docker-compose.yaml
          mode: '0644'

      - name: Sync Makefile structure
        ansible.builtin.synchronize:
          src: '{{ github_workspace }}/'
          dest: '~/'
          recursive: yes
          rsync_opts:
            - '--include=*/'
            - '--include=Makefile'
            - '--include=*/Makefile'
            - '--include=*/**/Makefile'
            - '--include=*/**/**/Makefile'
            - '--exclude=*'

      - name: Update backend makefile for the staging environment
        shell:
          cmd: sed -i 's/\bnest-backend\b/staging-nest-backend/' ~/backend/Makefile

      - name: Update frontend makefile for the staging environment
        shell:
          cmd: sed -i 's/\bnest-frontend\b/staging-nest-frontend/' ~/frontend/Makefile

      - name: Ensure data directory exists
        ansible.builtin.file:
          path: ~/backend/data
          state: directory
          mode: '0755'

      - name: Copy secrets
        copy:
          src: '{{ github_workspace }}/{{ item }}'
          dest: ~/
          mode: '0400'
        loop:
          - .env.backend
          - .env.cache
          - .env.db
          - .env.frontend

      - name: Clean up secrets
        delegate_to: localhost
        file:
          path: '{{ github_workspace }}/{{ item }}'
          state: absent
        loop:
          - .env.backend
          - .env.cache
          - .env.db
          - .env.frontend
        run_once: true

      - name: Copy crontab
        copy:
          src: '{{ github_workspace }}/cron/staging'
          dest: /tmp/staging_crontab
          mode: '0600'

      - name: Install crontab
        ansible.builtin.command:
          cmd: crontab /tmp/staging_crontab

      - name: Retart services
        shell:
          cmd: docker compose up -d --pull always

      - name: Prune docker images
        shell:
          cmd: docker image prune -f

      - name: Index data
        async: 1800 # 30 minutes
        poll: 0
        shell: |
          make index-data > /var/log/nest/staging/index-data.log 2>&1
